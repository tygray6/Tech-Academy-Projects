@model Bewander.Models.ContactModels
@{
    ViewBag.Title = "Contact";
}

<style>
    #ContactDivWrapper {
        width: 100%;
        margin: auto;
        margin: 0px;
        padding: 0px;
        background-size: cover;
        min-height: 600px;
        background: white; /* For browsers that do not support gradients */
        background: -webkit-linear-gradient(left top, white, #71AB94); /* For Safari 5.1 to 6.0 */
        background: -o-linear-gradient(bottom right, white, #71AB94); /* For Opera 11.1 to 12.0 */
        background: -moz-linear-gradient(bottom right, white, #71AB94); /* For Firefox 3.6 to 15 */
        background: linear-gradient(to bottom right, white, #71AB94); /* Standard syntax */
    }

    .contactForm {
        background: rgba(200,200,200, .4);
        box-shadow: .5em .5em .5em rgba(0, 0, 0, .2);
        border: double 3px #666666;
        width: 60%;
        display: block;
        margin: auto;
        margin-top: 7%;
    }
</style>
@*End container from Layout*@
</div>

<div id="ContactDivWrapper" class="row col-xs-12">
    <div class="col-xs-4">
        <h1 class="text-center" style:"strong">Contact us</h1>
        <img class="img-circle" style="width:100%;" src="~/Images/Home/WaterfallWalk.png" />
        <address>
            310 Bewander Blvd<br />
            Bewander, BW 97204<br />
            <abbr title="Phone">P:</abbr>
            555.555.5555
        </address>

        <address>
            <strong>Support:</strong>   <a href="mailto:support@bewander.com">support@bewander.com</a><br />
            <strong>Marketing:</strong> <a href="mailto:support@bewander.com">marketing@bewander.com</a>
        </address>
    </div>
    <div class="col-xs-8 contactForm">
        @using (Html.BeginForm("Contact", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="form-group">
                @Html.ValidationSummary("", new { @class = "text-danger" })
                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                <div class="col-md-6 control-label">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstName) @*Add styling to show only if it fails validation see http://ryanbutler.org/ASPMVCForm/Index4*@
                </div>
            </div>
            <div class="form-group">
                @*@Html.ValidationSummary(true)*@
                @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                <div class="col-md-6 control-label">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName) @*Add styling to show only if missing*@
                </div>
            </div>
            <div class="form-group">
                @*@Html.ValidationSummary(true)*@
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email) @*Add styling to show only if missing*@
                </div>
            </div>
            @* <!--Message if invalid email address is entered-->
                    <div class="form-group has-error">
                    <label class="col-xs-2 control-label" for="inputError">Email</label>
                    <div class="col-xs-10">
                        <input type="email" id="inputError" class="form-control" placeholder="Input with error">
                        <span class="help-block">Please enter a valid email address</span>
                    </div>
                </div>*@
            <div class="form-group">
                @*@Html.ValidationSummary(true)*@
                @Html.LabelFor(m => m.Subject, new { @class = "col-md-2 control-label" })
                <div class="col-md-10 control-label">
                    @Html.TextBoxFor(m => m.Subject, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(model => model.Subject) Add styling to show only if missing*@
                </div>
            </div>
            <div class="form-group">
                @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
                @Html.ValidationSummary(true)
                @Html.LabelFor(m => m.Message, new { @class = "col-md-2 control-label" })
                <div class="col-md-10 control-label">
                    @Html.TextAreaFor(m => m.Message, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(model => model.Message)*@ @*Add styling to show only if missing*@
                </div>
            </div>

            <div class="form-group">
                <div class="row col-md-offset-2 col-md-10">
                    <input type="submit" id="submitMessageButton" class="btn btn-default" value="Submit Message" />
                    <input type="reset" class="btn btn-default" value="Reset" onclick="this.form.reset()" />
                </div>
            </div>

        }
    </div>
</div>

<!--Start Container form _Layout.cshtml-->
<div class="container body-content">